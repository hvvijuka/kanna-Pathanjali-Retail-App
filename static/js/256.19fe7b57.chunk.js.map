{"version":3,"file":"static/js/256.19fe7b57.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CLOUD_NAME = \"dqdkd2crn\";\r\nconst ASSET_FOLDER = \"Radha\"; // main asset folder\r\n\r\nexport default function AdminDashboard() {\r\n  const [categories, setCategories] = useState([\"All\"]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [items, setItems] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n  const fetchUploadedImages = async () => {\r\n    try {\r\n\r\n       //const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n      const BACKEND_URL =\r\n        process.env.REACT_APP_BACKEND_URL ||\r\n        (window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5001\"\r\n        : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n      alert(`🧩 Using backend: ${BACKEND_URL}`);\r\n      const res = await axios.get(`${BACKEND_URL}/api/getImages`);\r\n      const folderImages = res.data;\r\n\r\n      const allItems = [];\r\n      const allCategories = new Set([\"All\"]);\r\n\r\n      for (const folder in folderImages) {\r\n        const images = folderImages[folder];\r\n        // folder value coming from server is like \"Radha/CategoryName\"\r\n        const category = folder.replace(`${ASSET_FOLDER}/`, \"\") || \"All\";\r\n\r\n        images.forEach((img) => {\r\n          // Backend returns: { id, name, url, category, context }\r\n          // Always guard against missing fields\r\n          const id = img.id || img.asset_id || Date.now();\r\n          const name = img.name || (img.public_id ? img.public_id.split(\"/\").pop() : \"unknown\");\r\n          const imageUrl = img.url || img.secure_url || img.url_secure || \"\";\r\n          const context = img.context || {}; // server sets context (object) or {}\r\n\r\n          // Cloudinary stores custom context in context.custom (object) or sometimes context in string\r\n          // handle both shapes:\r\n          const customContext =\r\n            (context.custom && typeof context.custom === \"object\")\r\n              ? context.custom\r\n              : // sometimes context is { custom: \"k=v|k2=v2\" } or similar — try parse fallback\r\n              (typeof context === \"object\" && typeof context.custom === \"string\")\r\n                ? context.custom.split(\"|\").reduce((acc, pair) => {\r\n                    const [k, v] = pair.split(\"=\");\r\n                    if (k) acc[k] = v ?? \"\";\r\n                    return acc;\r\n                  }, {})\r\n                : {};\r\n\r\n          allItems.push({\r\n            id,\r\n            name,\r\n            image: imageUrl,\r\n            category,\r\n            uploaded: true,\r\n            price: customContext.price || \"\",\r\n            qty: customContext.qty || \"\",\r\n            description: customContext.description || \"\",\r\n            file: null,\r\n          });\r\n        });\r\n\r\n        allCategories.add(category);\r\n      }\r\n\r\n      setItems(allItems);\r\n      setCategories([...allCategories]);\r\n      console.log(\"Fetched Cloudinary images:\", allItems);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch Cloudinary images:\", err);\r\n      alert(\"Error fetching images. Check console for details.\");\r\n    }\r\n  };\r\n\r\n  fetchUploadedImages();\r\n}, []);\r\n\r\n  \r\n  // ✅ Add new category\r\n  const handleAddCategory = () => {\r\n    if (newCategory && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  // ✅ Add local image with metadata inputs\r\n  const handleFileUploadLocal = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        name: file.name,\r\n        price: \"\",\r\n        qty: \"\",\r\n        description: \"\",\r\n        category: selectedCategory,\r\n        image: reader.result,\r\n        uploaded: false,\r\n        file,\r\n      };\r\n      setItems((prev) => [...prev, newItem]);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // ✅ Update metadata (price, qty, desc)\r\n  const handleChangeField = (id, field, value) => {\r\n    setItems((prev) =>\r\n      prev.map((item) =>\r\n        item.id === id ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // ✅ Delete item\r\n  const handleDelete = (id) => {\r\n    setItems(items.filter((item) => item.id !== id));\r\n  };\r\n\r\n  // ✅ Logout\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  // ✅ Upload with metadata to Cloudinary\r\n  const handleUploadAllSigned = async () => {\r\n    if (items.length === 0) return alert(\"No images to upload!\");\r\n\r\n    const newItems = [...items];\r\n    //const BACKEND_URL = process.env.REACT_APP_BACKEND_URL;\r\n    const BACKEND_URL =\r\n        process.env.REACT_APP_BACKEND_URL ||\r\n        (window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5001\"\r\n        : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n    const categoryMap = {};\r\n    newItems.forEach((item, index) => {\r\n      if (!item.uploaded && item.file) {\r\n        const cat = item.category?.trim().replace(/\\s+/g, \"_\") || \"Uncategorized\";\r\n        if (!categoryMap[cat]) categoryMap[cat] = [];\r\n        categoryMap[cat].push({ ...item, index });\r\n      }\r\n    });\r\n\r\n    for (const cat in categoryMap) {\r\n      const itemsInCategory = categoryMap[cat];\r\n\r\n      for (const { file, name, price, qty, description, index } of itemsInCategory) {\r\n        try {\r\n          const folderPath = `${ASSET_FOLDER}/${cat}`;\r\n          const publicId = name.replace(/\\.[^/.]+$/, \"\");\r\n\r\n          // Get signature from backend\r\n          const sigRes = await axios.get(\r\n            `${BACKEND_URL}/api/signature?folder=${encodeURIComponent(folderPath)}&public_id=${encodeURIComponent(publicId)}`\r\n          );\r\n          const { signature, timestamp, apiKey, cloudName } = sigRes.data;\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"folder\", folderPath);\r\n          formData.append(\"public_id\", publicId);\r\n          formData.append(\"api_key\", apiKey);\r\n          formData.append(\"timestamp\", timestamp);\r\n          formData.append(\"signature\", signature);\r\n\r\n          // ✅ Attach metadata using Cloudinary's \"context\" field\r\n          const contextString = `price=${price}|qty=${qty}|description=${description}`;\r\n          formData.append(\"context\", contextString);\r\n\r\n          const response = await axios.post(\r\n            `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,\r\n            formData\r\n          );\r\n\r\n          newItems[index].image = response.data.secure_url;\r\n          newItems[index].uploaded = true;\r\n\r\n          console.log(`✅ Uploaded successfully: ${name} → ${folderPath}`);\r\n        } catch (err) {\r\n          const errorMsg = err.response?.data?.error?.message || err.message;\r\n          console.error(`❌ Failed to upload ${name}: ${errorMsg}`);\r\n          alert(`Failed to upload \"${name}\": ${errorMsg}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    setItems(newItems);\r\n    alert(\"✅ All images uploaded successfully!\");\r\n  };\r\n\r\n  // ✅ Group items by category for display\r\n  const groupedItems = categories.reduce((acc, cat) => {\r\n    acc[cat] = items.filter((item) => item.category === cat);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"p-8 bg-green-50 min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-green-700\">Admin Dashboard</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Category Management */}\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n          placeholder=\"New Category\"\r\n          className=\"border p-2 rounded w-64\"\r\n        />\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Add Category\r\n        </button>\r\n      </div>\r\n\r\n      {/* File Upload */}\r\n      <div className=\"flex gap-2 mb-6\">\r\n        <select\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n          value={selectedCategory}\r\n        >\r\n          {categories.map((cat) => (\r\n            <option key={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileUploadLocal}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {/* Upload All Button */}\r\n      {items.some((item) => !item.uploaded) && (\r\n        <button\r\n          onClick={handleUploadAllSigned}\r\n          className=\"mb-6 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Upload All to Cloudinary\r\n        </button>\r\n      )}\r\n\r\n      {/* Display items grouped by category */}\r\n      {categories.map((cat) => (\r\n        <div key={cat} className=\"mb-8\">\r\n          <h2 className=\"text-xl font-semibold text-green-800 mb-3\">{cat}</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n            {groupedItems[cat]?.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className=\"p-4 bg-white rounded-xl shadow hover:shadow-lg transition\"\r\n              >\r\n                {item.image && (\r\n                  <img\r\n                    src={item.image}\r\n                    alt={item.name}\r\n                    className=\"w-full h-40 object-cover rounded mb-3\"\r\n                  />\r\n                )}\r\n                <p className=\"font-bold text-lg\">{item.name}</p>\r\n\r\n                <input\r\n                  type=\"text\"\r\n                  placeholder=\"Price\"\r\n                  value={item.price}\r\n                  onChange={(e) => handleChangeField(item.id, \"price\", e.target.value)}\r\n                  className=\"border p-1 rounded w-full mb-2\"\r\n                />\r\n\r\n                <input\r\n                  type=\"number\"\r\n                  placeholder=\"Quantity\"\r\n                  value={item.qty}\r\n                  onChange={(e) => handleChangeField(item.id, \"qty\", e.target.value)}\r\n                  className=\"border p-1 rounded w-full mb-2\"\r\n                />\r\n\r\n                <textarea\r\n                  placeholder=\"Description\"\r\n                  value={item.description}\r\n                  onChange={(e) => handleChangeField(item.id, \"description\", e.target.value)}\r\n                  className=\"border p-1 rounded w-full mb-2\"\r\n                />\r\n\r\n                <p className=\"text-sm text-green-700 mt-1\">\r\n                  Category: {item.category}\r\n                </p>\r\n                {item.uploaded ? (\r\n                  <span className=\"text-xs text-blue-600\">Uploaded</span>\r\n                ) : (\r\n                  <span className=\"text-xs text-orange-600\">Not uploaded</span>\r\n                )}\r\n\r\n                <button\r\n                  onClick={() => handleDelete(item.id)}\r\n                  className=\"mt-3 bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ASSET_FOLDER","AdminDashboard","categories","setCategories","useState","newCategory","setNewCategory","selectedCategory","setSelectedCategory","items","setItems","navigate","useNavigate","useEffect","async","BACKEND_URL","process","alert","concat","folderImages","axios","get","data","allItems","allCategories","Set","folder","images","category","replace","forEach","img","id","asset_id","Date","now","name","public_id","split","pop","imageUrl","url","secure_url","url_secure","context","customContext","custom","reduce","acc","pair","k","v","push","image","uploaded","price","qty","description","file","add","console","log","err","error","fetchUploadedImages","handleChangeField","field","value","prev","map","item","_objectSpread","groupedItems","cat","filter","_jsxs","className","children","_jsx","onClick","handleLogout","onChange","e","target","placeholder","handleAddCategory","includes","type","accept","files","reader","FileReader","onloadend","newItem","result","readAsDataURL","some","length","newItems","categoryMap","index","_item$category","trim","itemsInCategory","folderPath","publicId","sigRes","encodeURIComponent","signature","timestamp","apiKey","cloudName","formData","FormData","append","contextString","response","post","_err$response","_err$response$data","_err$response$data$er","errorMsg","message","_groupedItems$cat","src","alt","handleDelete"],"sourceRoot":""}