{"version":3,"file":"static/js/256.36b32b91.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CLOUD_NAME = \"dqdkd2crn\";\r\nconst ASSET_FOLDER = \"Radha\"; // main asset folder\r\n\r\nexport default function AdminDashboard() {\r\n  const [categories, setCategories] = useState([\"All\"]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [items, setItems] = useState([]);\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n  const fetchUploadedImages = async () => {\r\n    try {\r\n      const res = await axios.get(\"http://localhost:5001/api/getImages\"); // Backend\r\n      const folderImages = res.data;\r\n\r\n      const allItems = [];\r\n      const allCategories = new Set([\"All\"]);\r\n      let debugMessage = \"Fetched Images:\\n\";\r\n\r\n      // Flatten folder-wise images into a single list\r\n      for (const folder in folderImages) {\r\n        const images = folderImages[folder];\r\n        const category = folder.replace(\"Radha/\", \"\") || \"All\";\r\n\r\n        debugMessage += `\\nüìÇ Folder: ${category}\\n`;\r\n\r\n        images.forEach((img) => {\r\n          allItems.push({\r\n            id: img.id,\r\n            name: img.name,\r\n            image: img.url,\r\n            category,\r\n            uploaded: true,\r\n            file: null,\r\n          });\r\n\r\n          // Build debug text\r\n          debugMessage += ` - ${img.name}\\n`;\r\n        });\r\n\r\n        allCategories.add(category);\r\n      }\r\n\r\n      setItems(allItems);\r\n      setCategories([...allCategories]);\r\n\r\n      console.log(\"Fetched Cloudinary images:\", allItems);\r\n\r\n      // ‚úÖ Show all image names in one alert (instead of hundreds)\r\n      alert(debugMessage);\r\n    } catch (err) {\r\n      console.error(\"Failed to fetch Cloudinary images:\", err);\r\n      alert(\"Error fetching images. Check console for details.\");\r\n    }\r\n    };\r\n    fetchUploadedImages();\r\n  }, []);\r\n\r\n  // Add new category\r\n  const handleAddCategory = () => {\r\n    if (newCategory && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  // Add local image\r\n  const handleFileUploadLocal = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        name: file.name,\r\n        price: \"‚Çπ100\",\r\n        qty: 1,\r\n        category: selectedCategory,\r\n        image: reader.result,\r\n        uploaded: false,\r\n        file,\r\n      };\r\n      setItems((prev) => [...prev, newItem]);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // Delete item\r\n  const handleDelete = (id) => {\r\n    setItems(items.filter((item) => item.id !== id));\r\n  };\r\n\r\n  // Logout\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n\r\n  const handleUploadAllSigned = async () => {\r\n  if (items.length === 0) return alert(\"No images to upload!\");\r\n\r\n  const newItems = [...items];\r\n\r\n  // Group items by category\r\n  const categoryMap = {};\r\n  newItems.forEach((item, index) => {\r\n    if (!item.uploaded && item.file) {\r\n      const cat = item.category?.trim().replace(/\\s+/g, \"_\") || \"Uncategorized\";\r\n      if (!categoryMap[cat]) categoryMap[cat] = [];\r\n      categoryMap[cat].push({ ...item, index });\r\n    }\r\n  });\r\n\r\n  for (const cat in categoryMap) {\r\n    const itemsInCategory = categoryMap[cat];\r\n\r\n    for (const { file, name, index } of itemsInCategory) {\r\n      try {\r\n        const folderPath = `${ASSET_FOLDER}/${cat}`;\r\n        const publicId = name.replace(/\\.[^/.]+$/, \"\"); // remove file extension\r\n\r\n        // ‚úÖ Get signature for this specific file\r\n        const { data: sigData } = await axios.get(\r\n          `http://localhost:5001/api/signature?folder=${encodeURIComponent(\r\n            folderPath\r\n          )}&public_id=${encodeURIComponent(publicId)}`\r\n        );\r\n\r\n        const { signature, timestamp, apiKey, cloudName } = sigData;\r\n\r\n        const formData = new FormData();\r\n        formData.append(\"file\", file);\r\n        formData.append(\"folder\", folderPath);\r\n        formData.append(\"public_id\", publicId);\r\n        formData.append(\"api_key\", apiKey);\r\n        formData.append(\"timestamp\", timestamp);\r\n        formData.append(\"signature\", signature);\r\n\r\n        const response = await axios.post(\r\n          `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,\r\n          formData\r\n        );\r\n\r\n        newItems[index].image = response.data.secure_url;\r\n        newItems[index].uploaded = true;\r\n\r\n        console.log(`‚úÖ Uploaded successfully: ${name} ‚Üí ${folderPath}`);\r\n      } catch (err) {\r\n        const errorMsg = err.response?.data?.error?.message || err.message;\r\n        console.error(`‚ùå Failed to upload ${name}: ${errorMsg}`);\r\n        alert(`Failed to upload \"${name}\": ${errorMsg}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(newItems);\r\n  alert(\"‚úÖ All images uploaded successfully!\");\r\n  };\r\n\r\n\r\n  // Group items by category for display\r\n  const groupedItems = categories.reduce((acc, cat) => {\r\n    acc[cat] = items.filter((item) => item.category === cat);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"p-8 bg-green-50 min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-green-700\">Admin Dashboard</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Category Management */}\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n          placeholder=\"New Category\"\r\n          className=\"border p-2 rounded w-64\"\r\n        />\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Add Category\r\n        </button>\r\n      </div>\r\n\r\n      {/* File Upload */}\r\n      <div className=\"flex gap-2 mb-6\">\r\n        <select\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n          value={selectedCategory}\r\n        >\r\n          {categories.map((cat) => (\r\n            <option key={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileUploadLocal}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {/* Upload All Button */}\r\n      {items.some((item) => !item.uploaded) && (\r\n        <button\r\n          onClick={handleUploadAllSigned}\r\n          className=\"mb-6 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Upload All to Cloudinary\r\n        </button>\r\n      )}\r\n\r\n      {/* Display items grouped by category */}\r\n      {categories.map((cat) => (\r\n        <div key={cat} className=\"mb-8\">\r\n          <h2 className=\"text-xl font-semibold text-green-800 mb-3\">{cat}</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n            {groupedItems[cat]?.map((item) => (\r\n              <div\r\n                key={item.id}\r\n                className=\"p-4 bg-white rounded-xl shadow hover:shadow-lg transition\"\r\n              >\r\n                {item.image && (\r\n                  <img\r\n                    src={item.image}\r\n                    alt={item.name}\r\n                    className=\"w-full h-40 object-cover rounded mb-3\"\r\n                  />\r\n                )}\r\n                <p className=\"font-bold text-lg\">{item.name}</p>\r\n                <p className=\"text-gray-600\">{item.price}</p>\r\n                <p className=\"text-gray-500\">Qty: {item.qty}</p>\r\n                <p className=\"text-sm text-green-700 mt-1\">\r\n                  Category: {item.category}\r\n                </p>\r\n                {!item.uploaded && (\r\n                  <span className=\"text-xs text-orange-600\">Not uploaded</span>\r\n                )}\r\n                {item.uploaded && (\r\n                  <span className=\"text-xs text-blue-600\">Uploaded</span>\r\n                )}\r\n                <button\r\n                  onClick={() => handleDelete(item.id)}\r\n                  className=\"mt-3 bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n                >\r\n                  Delete\r\n                </button>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ASSET_FOLDER","AdminDashboard","categories","setCategories","useState","newCategory","setNewCategory","selectedCategory","setSelectedCategory","items","setItems","navigate","useNavigate","useEffect","async","folderImages","axios","get","data","allItems","allCategories","Set","debugMessage","folder","images","category","replace","concat","forEach","img","push","id","name","image","url","uploaded","file","add","console","log","alert","err","error","fetchUploadedImages","groupedItems","reduce","acc","cat","filter","item","_jsxs","className","children","_jsx","onClick","handleLogout","value","onChange","e","target","placeholder","handleAddCategory","includes","map","type","accept","files","reader","FileReader","onloadend","newItem","Date","now","price","qty","result","prev","readAsDataURL","some","length","newItems","categoryMap","index","_item$category","trim","_objectSpread","itemsInCategory","folderPath","publicId","sigData","encodeURIComponent","signature","timestamp","apiKey","cloudName","formData","FormData","append","response","post","secure_url","_err$response","_err$response$data","_err$response$data$er","errorMsg","message","_groupedItems$cat","src","alt","handleDelete"],"sourceRoot":""}