{"version":3,"file":"static/js/256.3496aee0.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CLOUD_NAME = \"dqdkd2crn\";\r\nconst ASSET_FOLDER = \"Radha\";\r\n\r\nexport default function AdminDashboard() {\r\n  const [categories, setCategories] = useState([\"All\"]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [items, setItems] = useState([]);\r\n  const [editingItemId, setEditingItemId] = useState(null);\r\n  const [hasEdits, setHasEdits] = useState(false); // ✅ track unsaved edits\r\n  const navigate = useNavigate();\r\n\r\n\r\n  useEffect(() => {\r\n  const fetchUploadedImages = async () => {\r\n    try {\r\n      const BACKEND_URL =\r\n        process.env.REACT_APP_BACKEND_URL ||\r\n        (window.location.hostname === \"localhost\"\r\n          ? \"http://localhost:5001\"\r\n          : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n      console.log(`🧩 Using backend: ${BACKEND_URL}`);\r\n      const res = await axios.get(`${BACKEND_URL}/api/getImages`);\r\n      const folderImages = res.data;\r\n\r\n      const allItems = [];\r\n      const allCategories = new Set([\"All\"]);\r\n\r\n      for (const folder in folderImages) {\r\n        const images = folderImages[folder];\r\n        const category = folder.replace(/^Radha\\//, \"\") || \"All\";\r\n\r\n        images.forEach((img) => {\r\n          const id = img.asset_id || Date.now() + Math.random();\r\n          const name =\r\n            img.original_filename ||\r\n            img.public_id?.split(\"/\").pop() ||\r\n            \"unknown\";\r\n          const imageUrl = img.secure_url || img.url || \"\";\r\n          const cloudinaryId = img.public_id; // real public_id\r\n\r\n          // Parse saved context\r\n          let price = \"\", qty = \"\", description = \"\";\r\n          if (img.context) {\r\n            const ctx = img.context.custom || img.context;\r\n            if (typeof ctx === \"object\") {\r\n              price = ctx.price || \"\";\r\n              qty = ctx.qty || \"\";\r\n              description = ctx.description || \"\";\r\n            } else if (typeof ctx === \"string\") {\r\n              ctx.split(\"|\").forEach((pair) => {\r\n                const [k, v] = pair.split(\"=\");\r\n                if (k === \"price\") price = v;\r\n                if (k === \"qty\") qty = v;\r\n                if (k === \"description\") description = v;\r\n              });\r\n            }\r\n          }\r\n\r\n          allItems.push({\r\n            id,\r\n            name,\r\n            image: imageUrl,\r\n            category,\r\n            uploaded: true,\r\n            price,\r\n            qty,\r\n            description,\r\n            public_id: cloudinaryId, // use real public_id\r\n            edited: false,           // track edits\r\n          });\r\n        });\r\n\r\n        allCategories.add(category);\r\n      }\r\n\r\n      setItems(allItems);\r\n      setCategories([...allCategories]);\r\n      console.log(\"✅ Fetched Cloudinary images:\", allItems);\r\n    } catch (err) {\r\n      console.error(\"❌ Failed to fetch Cloudinary images:\", err);\r\n      alert(\"Error fetching images. Check console for details.\");\r\n    }\r\n  };\r\n\r\n  fetchUploadedImages();\r\n}, []);\r\n\r\n\r\n  // ✅ Add new category\r\n  const handleAddCategory = () => {\r\n    if (newCategory && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  // ✅ Local file upload (before uploading to Cloudinary)\r\n  const handleFileUploadLocal = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        name: file.name,\r\n        price: \"\",\r\n        qty: \"\",\r\n        description: \"\",\r\n        category: selectedCategory,\r\n        image: reader.result,\r\n        uploaded: false,\r\n        file,\r\n      };\r\n      setItems((prev) => [...prev, newItem]);\r\n      setEditingItemId(newItem.id);\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  // ✅ Track field edits\r\n  const handleChangeField = (id, field, value) => {\r\n    setItems((prev) =>\r\n      prev.map((item) =>\r\n        item.id === id ? { ...item, [field]: value, edited: true } : item\r\n      )\r\n    );\r\n    setHasEdits(true); // show Upload button when any field changes\r\n  };\r\n\r\n  // ✅ Toggle edit mode\r\n  const toggleEdit = (id) => {\r\n    setEditingItemId((prev) => (prev === id ? null : id));\r\n  };\r\n\r\n  // ✅ Delete item\r\n  const handleDelete = (id) => {\r\n    setItems(items.filter((item) => item.id !== id));\r\n    if (editingItemId === id) setEditingItemId(null);\r\n  };\r\n\r\n  // ✅ Logout\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n\r\n\r\n\r\n  const handleUploadAllSigned = async () => {\r\n  if (items.length === 0) return alert(\"No images to upload!\");\r\n\r\n  const newItems = [...items];\r\n  const BACKEND_URL =\r\n    process.env.REACT_APP_BACKEND_URL ||\r\n    (window.location.hostname === \"localhost\"\r\n      ? \"http://localhost:5001\"\r\n      : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n  // Group items by category\r\n  const categoryMap = {};\r\n  newItems.forEach((item, index) => {\r\n    if ((!item.uploaded && item.file) || item.edited) {\r\n      const cat = item.category?.trim().replace(/\\s+/g, \"_\") || \"Uncategorized\";\r\n      if (!categoryMap[cat]) categoryMap[cat] = [];\r\n      categoryMap[cat].push({ ...item, index });\r\n    }\r\n  });\r\n\r\n  for (const cat in categoryMap) {\r\n    const itemsInCategory = categoryMap[cat];\r\n\r\n    for (const itemData of itemsInCategory) {\r\n      const { file, name, price, qty, description, index, public_id } = itemData;\r\n\r\n      try {\r\n        if (!name && !file) {\r\n          console.warn(\"⚠️ Skipping item with missing name and no file\");\r\n          continue;\r\n        }\r\n\r\n        const folderPath = `${ASSET_FOLDER}/${cat}`;\r\n        const cleanedName = name ? name.replace(/\\.[^/.]+$/, \"\") : `unnamed_${Date.now()}`;\r\n        const contextString = `price=${price || \"\"}|qty=${qty || \"\"}|description=${description || \"\"}`;\r\n\r\n        // Determine the correct public_id for Cloudinary\r\n        const actualPublicId = public_id || `${folderPath}/${cleanedName}`;\r\n\r\n        // Fetch signed credentials\r\n        const sigURL = file\r\n          ? `${BACKEND_URL}/api/signature?folder=${encodeURIComponent(folderPath)}&public_id=${encodeURIComponent(cleanedName)}&context=${encodeURIComponent(contextString)}&type=upload`\r\n          : `${BACKEND_URL}/api/signature?public_id=${encodeURIComponent(actualPublicId)}&context=${encodeURIComponent(contextString)}&type=upload`;\r\n\r\n        const sigRes = await axios.get(sigURL);\r\n        const { signature, timestamp, apiKey, cloudName } = sigRes.data;\r\n\r\n        if (file) {\r\n          // 🟢 Upload new file\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"folder\", folderPath);\r\n          formData.append(\"public_id\", cleanedName);\r\n          formData.append(\"api_key\", apiKey);\r\n          formData.append(\"timestamp\", timestamp);\r\n          formData.append(\"signature\", signature);\r\n          formData.append(\"context\", contextString);\r\n\r\n          const response = await axios.post(\r\n            `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,\r\n            formData\r\n          );\r\n\r\n          // Save Cloudinary info\r\n          newItems[index].image = response.data.secure_url;\r\n          newItems[index].public_id = response.data.public_id;\r\n          console.log(`✅ Uploaded successfully: ${name} → ${folderPath}`);\r\n        } else {\r\n          // 🟡 Metadata update only\r\n          if (!newItems[index].public_id) {\r\n            console.warn(`⚠️ Skipping metadata update: ${name} has no public_id yet`);\r\n            continue;\r\n          }\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"public_id\", newItems[index].public_id);\r\n          formData.append(\"type\", \"upload\"); // required for explicit API\r\n          formData.append(\"context\", contextString);\r\n          formData.append(\"api_key\", apiKey);\r\n          formData.append(\"timestamp\", timestamp);\r\n          formData.append(\"signature\", signature);\r\n\r\n          await axios.post(\r\n            `https://api.cloudinary.com/v1_1/${cloudName}/image/explicit`,\r\n            formData\r\n          );\r\n\r\n          console.log(`📝 Updated metadata for: ${name}`);\r\n        }\r\n\r\n        // ✅ Mark item as uploaded & saved\r\n        newItems[index].uploaded = true;\r\n        newItems[index].edited = false;\r\n      } catch (err) {\r\n        const errorMsg = err.response?.data?.error?.message || err.message;\r\n        console.error(`❌ Failed to upload ${name}: ${errorMsg}`);\r\n        alert(`Failed to upload \"${name}\": ${errorMsg}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  setItems(newItems);\r\n  setHasEdits(false);\r\n  alert(\"✅ All uploads & edits saved successfully!\");\r\n};\r\n\r\n\r\n  // ✅ Group items by category\r\n  const groupedItems = categories.reduce((acc, cat) => {\r\n    acc[cat] = items.filter((item) => item.category === cat);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"p-8 bg-green-50 min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-green-700\">Admin Dashboard</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Category Management */}\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n          placeholder=\"New Category\"\r\n          className=\"border p-2 rounded w-64\"\r\n        />\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Add Category\r\n        </button>\r\n      </div>\r\n\r\n      {/* File Upload */}\r\n      <div className=\"flex gap-2 mb-6\">\r\n        <select\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n          value={selectedCategory}\r\n        >\r\n          {categories.map((cat) => (\r\n            <option key={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileUploadLocal}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {/* ✅ Upload All Button shows if new or edited items exist */}\r\n      {(items.some((item) => !item.uploaded) || hasEdits) && (\r\n        <button\r\n          onClick={handleUploadAllSigned}\r\n          className=\"mb-6 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          {hasEdits\r\n            ? \"Update Edited Items to Cloudinary\"\r\n            : \"Upload All to Cloudinary\"}\r\n        </button>\r\n      )}\r\n\r\n      {/* Display items grouped by category */}\r\n      {categories.map((cat) => (\r\n        <div key={cat} className=\"mb-8\">\r\n          <h2 className=\"text-xl font-semibold text-green-800 mb-3\">{cat}</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n            {groupedItems[cat]?.map((item) => {\r\n              const isEditing = editingItemId === item.id;\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"p-4 bg-white rounded-xl shadow hover:shadow-lg transition\"\r\n                >\r\n                  {item.image && (\r\n                    <img\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      className=\"w-full h-40 object-cover rounded mb-3\"\r\n                    />\r\n                  )}\r\n                  <p className=\"font-bold text-lg\">{item.name}</p>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Price\"\r\n                    value={item.price}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"price\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Quantity\"\r\n                    value={item.qty}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"qty\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <textarea\r\n                    placeholder=\"Description\"\r\n                    value={item.description}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"description\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <p className=\"text-sm text-green-700\">\r\n                      Category: {item.category}\r\n                    </p>\r\n                    {item.uploaded ? (\r\n                      <span className=\"text-xs text-blue-600\">Uploaded</span>\r\n                    ) : (\r\n                      <span className=\"text-xs text-orange-600\">\r\n                        Not uploaded\r\n                      </span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between mt-3\">\r\n                    <button\r\n                      onClick={() => toggleEdit(item.id)}\r\n                      className={`px-3 py-1 rounded text-white ${\r\n                        isEditing\r\n                          ? \"bg-green-600 hover:bg-green-700\"\r\n                          : \"bg-yellow-500 hover:bg-yellow-600\"\r\n                      }`}\r\n                    >\r\n                      {isEditing ? \"Save\" : \"Edit\"}\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => handleDelete(item.id)}\r\n                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ASSET_FOLDER","AdminDashboard","categories","setCategories","useState","newCategory","setNewCategory","selectedCategory","setSelectedCategory","items","setItems","editingItemId","setEditingItemId","hasEdits","setHasEdits","navigate","useNavigate","useEffect","async","BACKEND_URL","process","console","log","concat","folderImages","axios","get","data","allItems","allCategories","Set","folder","images","category","replace","forEach","img","_img$public_id","id","asset_id","Date","now","Math","random","name","original_filename","public_id","split","pop","imageUrl","secure_url","url","cloudinaryId","price","qty","description","context","ctx","custom","pair","k","v","push","image","uploaded","edited","add","err","error","alert","fetchUploadedImages","handleChangeField","field","value","prev","map","item","_objectSpread","groupedItems","reduce","acc","cat","filter","_jsxs","className","children","_jsx","onClick","handleLogout","onChange","e","target","placeholder","handleAddCategory","includes","type","accept","file","files","reader","FileReader","onloadend","newItem","result","readAsDataURL","some","length","newItems","categoryMap","index","_item$category","trim","itemsInCategory","itemData","warn","folderPath","cleanedName","contextString","actualPublicId","sigURL","encodeURIComponent","sigRes","signature","timestamp","apiKey","cloudName","formData","FormData","append","response","post","_err$response","_err$response$data","_err$response$data$er","errorMsg","message","_groupedItems$cat","isEditing","src","alt","disabled","toggleEdit","handleDelete"],"sourceRoot":""}