{"version":3,"file":"static/js/256.2e25804b.chunk.js","mappings":"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","sources":["components/AdminDashboard.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport { useNavigate } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nconst CLOUD_NAME = \"dqdkd2crn\";\r\nconst ASSET_FOLDER = \"Radha\";\r\n\r\nexport default function AdminDashboard() {\r\n  const [categories, setCategories] = useState([\"All\"]);\r\n  const [newCategory, setNewCategory] = useState(\"\");\r\n  const [selectedCategory, setSelectedCategory] = useState(\"All\");\r\n  const [items, setItems] = useState([]);\r\n  const [editingItemId, setEditingItemId] = useState(null); // ✅ only one editable item\r\n  const navigate = useNavigate();\r\n\r\n  useEffect(() => {\r\n    const fetchUploadedImages = async () => {\r\n      try {\r\n        const BACKEND_URL =\r\n          process.env.REACT_APP_BACKEND_URL ||\r\n          (window.location.hostname === \"localhost\"\r\n            ? \"http://localhost:5001\"\r\n            : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n        console.log(`🧩 Using backend: ${BACKEND_URL}`);\r\n        const res = await axios.get(`${BACKEND_URL}/api/getImages`);\r\n        const folderImages = res.data;\r\n\r\n        const allItems = [];\r\n        const allCategories = new Set([\"All\"]);\r\n\r\n        for (const folder in folderImages) {\r\n          const images = folderImages[folder];\r\n          const category = folder.replace(/^Radha\\//, \"\") || \"All\";\r\n\r\n          images.forEach((img) => {\r\n            const id = img.asset_id || Date.now() + Math.random();\r\n            const name =\r\n              img.original_filename ||\r\n              img.public_id?.split(\"/\").pop() ||\r\n              \"unknown\";\r\n            const imageUrl = img.secure_url || img.url || \"\";\r\n\r\n            let price = \"\",\r\n              qty = \"\",\r\n              description = \"\";\r\n\r\n            if (img.context) {\r\n              const custom = img.context.custom || img.context;\r\n              if (typeof custom === \"object\") {\r\n                price = custom.price || \"\";\r\n                qty = custom.qty || \"\";\r\n                description = custom.description || \"\";\r\n              } else if (typeof custom === \"string\") {\r\n                custom.split(\"|\").forEach((pair) => {\r\n                  const [k, v] = pair.split(\"=\");\r\n                  if (k === \"price\") price = v;\r\n                  if (k === \"qty\") qty = v;\r\n                  if (k === \"description\") description = v;\r\n                });\r\n              }\r\n            }\r\n\r\n            allItems.push({\r\n              id,\r\n              name,\r\n              image: imageUrl,\r\n              category,\r\n              uploaded: true,\r\n              price,\r\n              qty,\r\n              description,\r\n            });\r\n          });\r\n\r\n          allCategories.add(category);\r\n        }\r\n\r\n        setItems(allItems);\r\n        setCategories([...allCategories]);\r\n        console.log(\"✅ Fetched Cloudinary images:\", allItems);\r\n      } catch (err) {\r\n        console.error(\"❌ Failed to fetch Cloudinary images:\", err);\r\n        alert(\"Error fetching images. Check console for details.\");\r\n      }\r\n    };\r\n\r\n    fetchUploadedImages();\r\n  }, []);\r\n\r\n  const handleAddCategory = () => {\r\n    if (newCategory && !categories.includes(newCategory)) {\r\n      setCategories([...categories, newCategory]);\r\n      setNewCategory(\"\");\r\n    }\r\n  };\r\n\r\n  const handleFileUploadLocal = (e) => {\r\n    const file = e.target.files[0];\r\n    if (!file) return;\r\n\r\n    const reader = new FileReader();\r\n    reader.onloadend = () => {\r\n      const newItem = {\r\n        id: Date.now(),\r\n        name: file.name,\r\n        price: \"\",\r\n        qty: \"\",\r\n        description: \"\",\r\n        category: selectedCategory,\r\n        image: reader.result,\r\n        uploaded: false,\r\n        file,\r\n      };\r\n      setItems((prev) => [...prev, newItem]);\r\n      setEditingItemId(newItem.id); // immediately open edit for new item\r\n    };\r\n    reader.readAsDataURL(file);\r\n  };\r\n\r\n  const handleChangeField = (id, field, value) => {\r\n    setItems((prev) =>\r\n      prev.map((item) =>\r\n        item.id === id ? { ...item, [field]: value } : item\r\n      )\r\n    );\r\n  };\r\n\r\n  // ✅ Toggle edit only for one item\r\n  const toggleEdit = (id) => {\r\n    setEditingItemId((prev) => (prev === id ? null : id));\r\n  };\r\n\r\n  const handleDelete = (id) => {\r\n    setItems(items.filter((item) => item.id !== id));\r\n    if (editingItemId === id) setEditingItemId(null); // close edit mode\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    navigate(\"/\");\r\n  };\r\n\r\n  const handleUploadAllSigned = async () => {\r\n    if (items.length === 0) return alert(\"No images to upload!\");\r\n\r\n    const newItems = [...items];\r\n    const BACKEND_URL =\r\n      process.env.REACT_APP_BACKEND_URL ||\r\n      (window.location.hostname === \"localhost\"\r\n        ? \"http://localhost:5001\"\r\n        : \"https://rk-backend-cxfa.onrender.com\");\r\n\r\n    const categoryMap = {};\r\n    newItems.forEach((item, index) => {\r\n      if (!item.uploaded && item.file) {\r\n        const cat =\r\n          item.category?.trim().replace(/\\s+/g, \"_\") || \"Uncategorized\";\r\n        if (!categoryMap[cat]) categoryMap[cat] = [];\r\n        categoryMap[cat].push({ ...item, index });\r\n      }\r\n    });\r\n\r\n    for (const cat in categoryMap) {\r\n      const itemsInCategory = categoryMap[cat];\r\n\r\n      for (const { file, name, price, qty, description, index } of itemsInCategory) {\r\n        try {\r\n          const folderPath = `${ASSET_FOLDER}/${cat}`;\r\n          const publicId = name.replace(/\\.[^/.]+$/, \"\");\r\n          const contextString = `price=${price}|qty=${qty}|description=${description}`;\r\n\r\n          const sigRes = await axios.get(\r\n            `${BACKEND_URL}/api/signature?folder=${encodeURIComponent(\r\n              folderPath\r\n            )}&public_id=${encodeURIComponent(\r\n              publicId\r\n            )}&context=${encodeURIComponent(contextString)}`\r\n          );\r\n          const { signature, timestamp, apiKey, cloudName } = sigRes.data;\r\n\r\n          const formData = new FormData();\r\n          formData.append(\"file\", file);\r\n          formData.append(\"folder\", folderPath);\r\n          formData.append(\"public_id\", publicId);\r\n          formData.append(\"api_key\", apiKey);\r\n          formData.append(\"timestamp\", timestamp);\r\n          formData.append(\"signature\", signature);\r\n          formData.append(\"context\", contextString);\r\n\r\n          const response = await axios.post(\r\n            `https://api.cloudinary.com/v1_1/${cloudName}/image/upload`,\r\n            formData\r\n          );\r\n\r\n          newItems[index].image = response.data.secure_url;\r\n          newItems[index].uploaded = true;\r\n          console.log(`✅ Uploaded successfully: ${name} → ${folderPath}`);\r\n        } catch (err) {\r\n          const errorMsg = err.response?.data?.error?.message || err.message;\r\n          console.error(`❌ Failed to upload ${name}: ${errorMsg}`);\r\n          alert(`Failed to upload \"${name}\": ${errorMsg}`);\r\n        }\r\n      }\r\n    }\r\n\r\n    setItems(newItems);\r\n    alert(\"✅ All images uploaded successfully!\");\r\n  };\r\n\r\n  const groupedItems = categories.reduce((acc, cat) => {\r\n    acc[cat] = items.filter((item) => item.category === cat);\r\n    return acc;\r\n  }, {});\r\n\r\n  return (\r\n    <div className=\"p-8 bg-green-50 min-h-screen\">\r\n      {/* Header */}\r\n      <div className=\"flex justify-between items-center mb-6\">\r\n        <h1 className=\"text-2xl font-bold text-green-700\">Admin Dashboard</h1>\r\n        <button\r\n          onClick={handleLogout}\r\n          className=\"bg-red-500 text-white px-4 py-2 rounded hover:bg-red-600\"\r\n        >\r\n          Logout\r\n        </button>\r\n      </div>\r\n\r\n      {/* Category Management */}\r\n      <div className=\"flex gap-2 mb-4\">\r\n        <input\r\n          value={newCategory}\r\n          onChange={(e) => setNewCategory(e.target.value)}\r\n          placeholder=\"New Category\"\r\n          className=\"border p-2 rounded w-64\"\r\n        />\r\n        <button\r\n          onClick={handleAddCategory}\r\n          className=\"bg-green-600 text-white px-4 py-2 rounded hover:bg-green-700\"\r\n        >\r\n          Add Category\r\n        </button>\r\n      </div>\r\n\r\n      {/* File Upload */}\r\n      <div className=\"flex gap-2 mb-6\">\r\n        <select\r\n          onChange={(e) => setSelectedCategory(e.target.value)}\r\n          className=\"border p-2 rounded\"\r\n          value={selectedCategory}\r\n        >\r\n          {categories.map((cat) => (\r\n            <option key={cat}>{cat}</option>\r\n          ))}\r\n        </select>\r\n\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={handleFileUploadLocal}\r\n          className=\"border p-2 rounded\"\r\n        />\r\n      </div>\r\n\r\n      {/* Upload All Button */}\r\n      {items.some((item) => !item.uploaded) && (\r\n        <button\r\n          onClick={handleUploadAllSigned}\r\n          className=\"mb-6 bg-blue-600 text-white px-6 py-2 rounded hover:bg-blue-700\"\r\n        >\r\n          Upload All to Cloudinary\r\n        </button>\r\n      )}\r\n\r\n      {/* Display items grouped by category */}\r\n      {categories.map((cat) => (\r\n        <div key={cat} className=\"mb-8\">\r\n          <h2 className=\"text-xl font-semibold text-green-800 mb-3\">{cat}</h2>\r\n          <div className=\"grid grid-cols-1 sm:grid-cols-2 md:grid-cols-3 gap-6\">\r\n            {groupedItems[cat]?.map((item) => {\r\n              const isEditing = editingItemId === item.id;\r\n              return (\r\n                <div\r\n                  key={item.id}\r\n                  className=\"p-4 bg-white rounded-xl shadow hover:shadow-lg transition\"\r\n                >\r\n                  {item.image && (\r\n                    <img\r\n                      src={item.image}\r\n                      alt={item.name}\r\n                      className=\"w-full h-40 object-cover rounded mb-3\"\r\n                    />\r\n                  )}\r\n                  <p className=\"font-bold text-lg\">{item.name}</p>\r\n\r\n                  <input\r\n                    type=\"text\"\r\n                    placeholder=\"Price\"\r\n                    value={item.price}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"price\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <input\r\n                    type=\"number\"\r\n                    placeholder=\"Quantity\"\r\n                    value={item.qty}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"qty\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <textarea\r\n                    placeholder=\"Description\"\r\n                    value={item.description}\r\n                    disabled={!isEditing}\r\n                    onChange={(e) =>\r\n                      handleChangeField(item.id, \"description\", e.target.value)\r\n                    }\r\n                    className={`border p-1 rounded w-full mb-2 ${\r\n                      isEditing ? \"bg-white\" : \"bg-gray-100\"\r\n                    }`}\r\n                  />\r\n\r\n                  <div className=\"flex justify-between items-center\">\r\n                    <p className=\"text-sm text-green-700\">\r\n                      Category: {item.category}\r\n                    </p>\r\n                    {item.uploaded ? (\r\n                      <span className=\"text-xs text-blue-600\">Uploaded</span>\r\n                    ) : (\r\n                      <span className=\"text-xs text-orange-600\">Not uploaded</span>\r\n                    )}\r\n                  </div>\r\n\r\n                  <div className=\"flex justify-between mt-3\">\r\n                    <button\r\n                      onClick={() => toggleEdit(item.id)}\r\n                      className={`px-3 py-1 rounded text-white ${\r\n                        isEditing\r\n                          ? \"bg-green-600 hover:bg-green-700\"\r\n                          : \"bg-yellow-500 hover:bg-yellow-600\"\r\n                      }`}\r\n                    >\r\n                      {isEditing ? \"Save\" : \"Edit\"}\r\n                    </button>\r\n\r\n                    <button\r\n                      onClick={() => handleDelete(item.id)}\r\n                      className=\"bg-red-500 text-white px-3 py-1 rounded hover:bg-red-600\"\r\n                    >\r\n                      Delete\r\n                    </button>\r\n                  </div>\r\n                </div>\r\n              );\r\n            })}\r\n          </div>\r\n        </div>\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n"],"names":["ASSET_FOLDER","AdminDashboard","categories","setCategories","useState","newCategory","setNewCategory","selectedCategory","setSelectedCategory","items","setItems","editingItemId","setEditingItemId","navigate","useNavigate","useEffect","async","BACKEND_URL","process","console","log","concat","folderImages","axios","get","data","allItems","allCategories","Set","folder","images","category","replace","forEach","img","_img$public_id","id","asset_id","Date","now","Math","random","name","original_filename","public_id","split","pop","imageUrl","secure_url","url","price","qty","description","context","custom","pair","k","v","push","image","uploaded","add","err","error","alert","fetchUploadedImages","handleChangeField","field","value","prev","map","item","_objectSpread","groupedItems","reduce","acc","cat","filter","_jsxs","className","children","_jsx","onClick","handleLogout","onChange","e","target","placeholder","handleAddCategory","includes","type","accept","file","files","reader","FileReader","onloadend","newItem","result","readAsDataURL","some","length","newItems","categoryMap","index","_item$category","trim","itemsInCategory","folderPath","publicId","contextString","sigRes","encodeURIComponent","signature","timestamp","apiKey","cloudName","formData","FormData","append","response","post","_err$response","_err$response$data","_err$response$data$er","errorMsg","message","_groupedItems$cat","isEditing","src","alt","disabled","toggleEdit","handleDelete"],"sourceRoot":""}